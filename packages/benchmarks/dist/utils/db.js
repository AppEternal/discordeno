import fs from 'node:fs/promises'
export const events = []
try {
  const files = await fs.readdir('db/events')
  for await (const file of files) {
    const eventsInFile = Object.values(await fs.readFile(`db/events/${file}`, 'utf8').then((text) => JSON.parse(text)))
    eventsInFile.forEach((eventInFile) => {
      if (typeof eventInFile === 'string') return
      events.push(eventInFile)
    })
  }
} catch {
  const event = await fetch('https://raw.githubusercontent.com/discordeno/benchmarks/main/db/events/10.json')
    .then(async (res) => await res.json())
    .then((eventsInFile) => eventsInFile['0'])
  for (let i = 0; i < 10; i++) {
    events.push(event)
  }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnbm9kZTpmcy9wcm9taXNlcydcbmltcG9ydCB0eXBlIHsgRGlzY29yZEdhdGV3YXlQYXlsb2FkIH0gZnJvbSAnQGRpc2NvcmRlbm8vdHlwZXMnXG5cbmV4cG9ydCBjb25zdCBldmVudHM6IEFycmF5PHtcbiAgc2hhcmRJZDogbnVtYmVyXG4gIHBheWxvYWQ6IERpc2NvcmRHYXRld2F5UGF5bG9hZFxufT4gPSBbXVxuXG50cnkge1xuICBjb25zdCBmaWxlcyA9IGF3YWl0IGZzLnJlYWRkaXIoJ2RiL2V2ZW50cycpXG5cbiAgZm9yIGF3YWl0IChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XG4gICAgY29uc3QgZXZlbnRzSW5GaWxlOiBBcnJheTxcbiAgICAgIHwge1xuICAgICAgICAgIHNoYXJkSWQ6IG51bWJlclxuICAgICAgICAgIHBheWxvYWQ6IERpc2NvcmRHYXRld2F5UGF5bG9hZFxuICAgICAgICB9XG4gICAgICB8IHN0cmluZ1xuICAgID4gPSBPYmplY3QudmFsdWVzKGF3YWl0IGZzLnJlYWRGaWxlKGBkYi9ldmVudHMvJHtmaWxlfWAsICd1dGY4JykudGhlbigodGV4dCkgPT4gSlNPTi5wYXJzZSh0ZXh0KSkpXG4gICAgZXZlbnRzSW5GaWxlLmZvckVhY2goKGV2ZW50SW5GaWxlKSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGV2ZW50SW5GaWxlID09PSAnc3RyaW5nJykgcmV0dXJuXG4gICAgICBldmVudHMucHVzaChldmVudEluRmlsZSlcbiAgICB9KVxuICB9XG59IGNhdGNoIHtcbiAgY29uc3QgZXZlbnQgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Rpc2NvcmRlbm8vYmVuY2htYXJrcy9tYWluL2RiL2V2ZW50cy8xMC5qc29uJylcbiAgICAudGhlbihhc3luYyAocmVzKSA9PiBhd2FpdCByZXMuanNvbigpKVxuICAgIC50aGVuKChldmVudHNJbkZpbGU6IGFueSkgPT4gZXZlbnRzSW5GaWxlWycwJ10pXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgIGV2ZW50cy5wdXNoKGV2ZW50KVxuICB9XG59XG4iXSwibmFtZXMiOlsiZnMiLCJldmVudHMiLCJmaWxlcyIsInJlYWRkaXIiLCJmaWxlIiwiZXZlbnRzSW5GaWxlIiwiT2JqZWN0IiwidmFsdWVzIiwicmVhZEZpbGUiLCJ0aGVuIiwidGV4dCIsIkpTT04iLCJwYXJzZSIsImZvckVhY2giLCJldmVudEluRmlsZSIsInB1c2giLCJldmVudCIsImZldGNoIiwicmVzIiwianNvbiIsImkiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFFBQVEsbUJBQWtCO0FBR2pDLE9BQU8sTUFBTUMsU0FHUixFQUFFLENBQUE7QUFFUCxJQUFJO0lBQ0YsTUFBTUMsUUFBUSxNQUFNRixHQUFHRyxPQUFPLENBQUM7SUFFL0IsV0FBVyxNQUFNQyxRQUFRRixNQUFPO1FBQzlCLE1BQU1HLGVBTUZDLE9BQU9DLE1BQU0sQ0FBQyxNQUFNUCxHQUFHUSxRQUFRLENBQUMsQ0FBQyxVQUFVLEVBQUVKLE1BQU0sRUFBRSxRQUFRSyxJQUFJLENBQUMsQ0FBQ0MsT0FBU0MsS0FBS0MsS0FBSyxDQUFDRjtRQUMzRkwsYUFBYVEsT0FBTyxDQUFDLENBQUNDO1lBQ3BCLElBQUksT0FBT0EsZ0JBQWdCLFVBQVU7WUFDckNiLE9BQU9jLElBQUksQ0FBQ0Q7UUFDZDtJQUNGO0FBQ0YsRUFBRSxPQUFNO0lBQ04sTUFBTUUsUUFBUSxNQUFNQyxNQUFNLGtGQUN2QlIsSUFBSSxDQUFDLE9BQU9TLE1BQVEsTUFBTUEsSUFBSUMsSUFBSSxJQUNsQ1YsSUFBSSxDQUFDLENBQUNKLGVBQXNCQSxZQUFZLENBQUMsSUFBSTtJQUNoRCxJQUFLLElBQUllLElBQUksR0FBR0EsSUFBSSxJQUFJQSxJQUFLO1FBQzNCbkIsT0FBT2MsSUFBSSxDQUFDQztJQUNkO0FBQ0YifQ==
