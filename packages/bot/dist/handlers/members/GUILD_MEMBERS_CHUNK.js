import { camelize } from '@discordeno/utils';
export async function handleGuildMembersChunk(bot, data) {
    const payload = data.d;
    // If it's not enabled skip checks.
    if (!bot.gateway.cache.requestMembers.enabled) return;
    // If this request has no nonce, skip checks.
    if (!payload.nonce) return;
    const pending = bot.gateway.cache.requestMembers.pending.get(payload.nonce);
    if (!pending) return;
    if (payload.chunk_count === 1) pending.members = payload.members;
    else pending.members.push(...payload.members);
    // If this is not the final chunk, just save to cache.
    if (payload.chunk_index + 1 < payload.chunk_count) return;
    // Resolve the promise that all requests are done.
    pending.resolve(camelize(pending.members));
    // Delete the cache to clean up once its done.
    bot.gateway.cache.requestMembers.pending.delete(payload.nonce);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oYW5kbGVycy9tZW1iZXJzL0dVSUxEX01FTUJFUlNfQ0hVTksudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEaXNjb3JkR2F0ZXdheVBheWxvYWQsIERpc2NvcmRHdWlsZE1lbWJlcnNDaHVuayB9IGZyb20gJ0BkaXNjb3JkZW5vL3R5cGVzJ1xuaW1wb3J0IHsgY2FtZWxpemUgfSBmcm9tICdAZGlzY29yZGVuby91dGlscydcbmltcG9ydCB0eXBlIHsgQm90IH0gZnJvbSAnLi4vLi4vYm90LmpzJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlR3VpbGRNZW1iZXJzQ2h1bmsoYm90OiBCb3QsIGRhdGE6IERpc2NvcmRHYXRld2F5UGF5bG9hZCk6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBwYXlsb2FkID0gZGF0YS5kIGFzIERpc2NvcmRHdWlsZE1lbWJlcnNDaHVua1xuXG4gIC8vIElmIGl0J3Mgbm90IGVuYWJsZWQgc2tpcCBjaGVja3MuXG4gIGlmICghYm90LmdhdGV3YXkuY2FjaGUucmVxdWVzdE1lbWJlcnMuZW5hYmxlZCkgcmV0dXJuXG5cbiAgLy8gSWYgdGhpcyByZXF1ZXN0IGhhcyBubyBub25jZSwgc2tpcCBjaGVja3MuXG4gIGlmICghcGF5bG9hZC5ub25jZSkgcmV0dXJuXG5cbiAgY29uc3QgcGVuZGluZyA9IGJvdC5nYXRld2F5LmNhY2hlLnJlcXVlc3RNZW1iZXJzLnBlbmRpbmcuZ2V0KHBheWxvYWQubm9uY2UpXG5cbiAgaWYgKCFwZW5kaW5nKSByZXR1cm5cblxuICBpZiAocGF5bG9hZC5jaHVua19jb3VudCA9PT0gMSkgcGVuZGluZy5tZW1iZXJzID0gcGF5bG9hZC5tZW1iZXJzXG4gIGVsc2UgcGVuZGluZy5tZW1iZXJzLnB1c2goLi4ucGF5bG9hZC5tZW1iZXJzKVxuXG4gIC8vIElmIHRoaXMgaXMgbm90IHRoZSBmaW5hbCBjaHVuaywganVzdCBzYXZlIHRvIGNhY2hlLlxuICBpZiAocGF5bG9hZC5jaHVua19pbmRleCArIDEgPCBwYXlsb2FkLmNodW5rX2NvdW50KSByZXR1cm5cblxuICAvLyBSZXNvbHZlIHRoZSBwcm9taXNlIHRoYXQgYWxsIHJlcXVlc3RzIGFyZSBkb25lLlxuICBwZW5kaW5nLnJlc29sdmUoY2FtZWxpemUocGVuZGluZy5tZW1iZXJzKSlcblxuICAvLyBEZWxldGUgdGhlIGNhY2hlIHRvIGNsZWFuIHVwIG9uY2UgaXRzIGRvbmUuXG4gIGJvdC5nYXRld2F5LmNhY2hlLnJlcXVlc3RNZW1iZXJzLnBlbmRpbmcuZGVsZXRlKHBheWxvYWQubm9uY2UpXG59XG4iXSwibmFtZXMiOlsiY2FtZWxpemUiLCJoYW5kbGVHdWlsZE1lbWJlcnNDaHVuayIsImJvdCIsImRhdGEiLCJwYXlsb2FkIiwiZCIsImdhdGV3YXkiLCJjYWNoZSIsInJlcXVlc3RNZW1iZXJzIiwiZW5hYmxlZCIsIm5vbmNlIiwicGVuZGluZyIsImdldCIsImNodW5rX2NvdW50IiwibWVtYmVycyIsInB1c2giLCJjaHVua19pbmRleCIsInJlc29sdmUiLCJkZWxldGUiXSwibWFwcGluZ3MiOiJBQUNBLFNBQVNBLFFBQVEsUUFBUSxvQkFBbUI7QUFHNUMsT0FBTyxlQUFlQyx3QkFBd0JDLEdBQVEsRUFBRUMsSUFBMkI7SUFDakYsTUFBTUMsVUFBVUQsS0FBS0UsQ0FBQztJQUV0QixtQ0FBbUM7SUFDbkMsSUFBSSxDQUFDSCxJQUFJSSxPQUFPLENBQUNDLEtBQUssQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUU7SUFFL0MsNkNBQTZDO0lBQzdDLElBQUksQ0FBQ0wsUUFBUU0sS0FBSyxFQUFFO0lBRXBCLE1BQU1DLFVBQVVULElBQUlJLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxjQUFjLENBQUNHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUixRQUFRTSxLQUFLO0lBRTFFLElBQUksQ0FBQ0MsU0FBUztJQUVkLElBQUlQLFFBQVFTLFdBQVcsS0FBSyxHQUFHRixRQUFRRyxPQUFPLEdBQUdWLFFBQVFVLE9BQU87U0FDM0RILFFBQVFHLE9BQU8sQ0FBQ0MsSUFBSSxJQUFJWCxRQUFRVSxPQUFPO0lBRTVDLHNEQUFzRDtJQUN0RCxJQUFJVixRQUFRWSxXQUFXLEdBQUcsSUFBSVosUUFBUVMsV0FBVyxFQUFFO0lBRW5ELGtEQUFrRDtJQUNsREYsUUFBUU0sT0FBTyxDQUFDakIsU0FBU1csUUFBUUcsT0FBTztJQUV4Qyw4Q0FBOEM7SUFDOUNaLElBQUlJLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDQyxjQUFjLENBQUNHLE9BQU8sQ0FBQ08sTUFBTSxDQUFDZCxRQUFRTSxLQUFLO0FBQy9EIn0=