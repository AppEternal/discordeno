export function transformSticker(bot, payload) {
    const props = bot.transformers.desiredProperties.sticker;
    const sticker = {};
    if (props.id && payload.id) sticker.id = bot.transformers.snowflake(payload.id);
    if (props.packId && payload.pack_id) sticker.packId = bot.transformers.snowflake(payload.pack_id);
    if (props.name && payload.name) sticker.name = payload.name;
    if (props.description && payload.description) sticker.description = payload.description;
    if (props.tags && payload.tags) sticker.tags = payload.tags;
    if (props.type && payload.type) sticker.type = payload.type;
    if (props.formatType && payload.format_type) sticker.formatType = payload.format_type;
    if (props.available && payload.available) sticker.available = payload.available;
    if (props.guildId && payload.guild_id) sticker.guildId = bot.transformers.snowflake(payload.guild_id);
    if (props.user && payload.user) sticker.user = bot.transformers.user(bot, payload.user);
    if (props.sortValue && payload.sort_value !== undefined) sticker.sortValue = payload.sort_value;
    return bot.transformers.customizers.sticker(bot, payload, sticker);
}
export function transformStickerPack(bot, payload) {
    const pack = {
        id: bot.transformers.snowflake(payload.id),
        stickers: payload.stickers.map((sticker)=>bot.transformers.sticker(bot, sticker)),
        name: payload.name,
        skuId: bot.transformers.snowflake(payload.sku_id),
        coverStickerId: payload.cover_sticker_id ? bot.transformers.snowflake(payload.cover_sticker_id) : undefined,
        description: payload.description,
        bannerAssetId: payload.banner_asset_id ? bot.transformers.snowflake(payload.banner_asset_id) : undefined
    };
    return bot.transformers.customizers.stickerPack(bot, payload, pack);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvc3RpY2tlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERpc2NvcmRTdGlja2VyLCBEaXNjb3JkU3RpY2tlclBhY2sgfSBmcm9tICdAZGlzY29yZGVuby90eXBlcydcbmltcG9ydCB0eXBlIHsgQm90IH0gZnJvbSAnLi4vYm90LmpzJ1xuaW1wb3J0IHR5cGUgeyBEZXNpcmVkUHJvcGVydGllc0JlaGF2aW9yLCBTZXR1cERlc2lyZWRQcm9wcywgVHJhbnNmb3JtZXJzRGVzaXJlZFByb3BlcnRpZXMgfSBmcm9tICcuLi9kZXNpcmVkUHJvcGVydGllcy5qcydcbmltcG9ydCB0eXBlIHsgU3RpY2tlciwgU3RpY2tlclBhY2sgfSBmcm9tICcuL3R5cGVzLmpzJ1xuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtU3RpY2tlcihib3Q6IEJvdCwgcGF5bG9hZDogRGlzY29yZFN0aWNrZXIpOiBTdGlja2VyIHtcbiAgY29uc3QgcHJvcHMgPSBib3QudHJhbnNmb3JtZXJzLmRlc2lyZWRQcm9wZXJ0aWVzLnN0aWNrZXJcbiAgY29uc3Qgc3RpY2tlciA9IHt9IGFzIFNldHVwRGVzaXJlZFByb3BzPFN0aWNrZXIsIFRyYW5zZm9ybWVyc0Rlc2lyZWRQcm9wZXJ0aWVzLCBEZXNpcmVkUHJvcGVydGllc0JlaGF2aW9yPlxuXG4gIGlmIChwcm9wcy5pZCAmJiBwYXlsb2FkLmlkKSBzdGlja2VyLmlkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5pZClcbiAgaWYgKHByb3BzLnBhY2tJZCAmJiBwYXlsb2FkLnBhY2tfaWQpIHN0aWNrZXIucGFja0lkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5wYWNrX2lkKVxuICBpZiAocHJvcHMubmFtZSAmJiBwYXlsb2FkLm5hbWUpIHN0aWNrZXIubmFtZSA9IHBheWxvYWQubmFtZVxuICBpZiAocHJvcHMuZGVzY3JpcHRpb24gJiYgcGF5bG9hZC5kZXNjcmlwdGlvbikgc3RpY2tlci5kZXNjcmlwdGlvbiA9IHBheWxvYWQuZGVzY3JpcHRpb25cbiAgaWYgKHByb3BzLnRhZ3MgJiYgcGF5bG9hZC50YWdzKSBzdGlja2VyLnRhZ3MgPSBwYXlsb2FkLnRhZ3NcbiAgaWYgKHByb3BzLnR5cGUgJiYgcGF5bG9hZC50eXBlKSBzdGlja2VyLnR5cGUgPSBwYXlsb2FkLnR5cGVcbiAgaWYgKHByb3BzLmZvcm1hdFR5cGUgJiYgcGF5bG9hZC5mb3JtYXRfdHlwZSkgc3RpY2tlci5mb3JtYXRUeXBlID0gcGF5bG9hZC5mb3JtYXRfdHlwZVxuICBpZiAocHJvcHMuYXZhaWxhYmxlICYmIHBheWxvYWQuYXZhaWxhYmxlKSBzdGlja2VyLmF2YWlsYWJsZSA9IHBheWxvYWQuYXZhaWxhYmxlXG4gIGlmIChwcm9wcy5ndWlsZElkICYmIHBheWxvYWQuZ3VpbGRfaWQpIHN0aWNrZXIuZ3VpbGRJZCA9IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQuZ3VpbGRfaWQpXG4gIGlmIChwcm9wcy51c2VyICYmIHBheWxvYWQudXNlcikgc3RpY2tlci51c2VyID0gYm90LnRyYW5zZm9ybWVycy51c2VyKGJvdCwgcGF5bG9hZC51c2VyKVxuICBpZiAocHJvcHMuc29ydFZhbHVlICYmIHBheWxvYWQuc29ydF92YWx1ZSAhPT0gdW5kZWZpbmVkKSBzdGlja2VyLnNvcnRWYWx1ZSA9IHBheWxvYWQuc29ydF92YWx1ZVxuXG4gIHJldHVybiBib3QudHJhbnNmb3JtZXJzLmN1c3RvbWl6ZXJzLnN0aWNrZXIoYm90LCBwYXlsb2FkLCBzdGlja2VyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtU3RpY2tlclBhY2soYm90OiBCb3QsIHBheWxvYWQ6IERpc2NvcmRTdGlja2VyUGFjayk6IFN0aWNrZXJQYWNrIHtcbiAgY29uc3QgcGFjayA9IHtcbiAgICBpZDogYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5pZCksXG4gICAgc3RpY2tlcnM6IHBheWxvYWQuc3RpY2tlcnMubWFwKChzdGlja2VyKSA9PiBib3QudHJhbnNmb3JtZXJzLnN0aWNrZXIoYm90LCBzdGlja2VyKSksXG4gICAgbmFtZTogcGF5bG9hZC5uYW1lLFxuICAgIHNrdUlkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLnNrdV9pZCksXG4gICAgY292ZXJTdGlja2VySWQ6IHBheWxvYWQuY292ZXJfc3RpY2tlcl9pZCA/IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQuY292ZXJfc3RpY2tlcl9pZCkgOiB1bmRlZmluZWQsXG4gICAgZGVzY3JpcHRpb246IHBheWxvYWQuZGVzY3JpcHRpb24sXG4gICAgYmFubmVyQXNzZXRJZDogcGF5bG9hZC5iYW5uZXJfYXNzZXRfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmJhbm5lcl9hc3NldF9pZCkgOiB1bmRlZmluZWQsXG4gIH0gYXMgU3RpY2tlclBhY2tcblxuICByZXR1cm4gYm90LnRyYW5zZm9ybWVycy5jdXN0b21pemVycy5zdGlja2VyUGFjayhib3QsIHBheWxvYWQsIHBhY2spXG59XG4iXSwibmFtZXMiOlsidHJhbnNmb3JtU3RpY2tlciIsImJvdCIsInBheWxvYWQiLCJwcm9wcyIsInRyYW5zZm9ybWVycyIsImRlc2lyZWRQcm9wZXJ0aWVzIiwic3RpY2tlciIsImlkIiwic25vd2ZsYWtlIiwicGFja0lkIiwicGFja19pZCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInRhZ3MiLCJ0eXBlIiwiZm9ybWF0VHlwZSIsImZvcm1hdF90eXBlIiwiYXZhaWxhYmxlIiwiZ3VpbGRJZCIsImd1aWxkX2lkIiwidXNlciIsInNvcnRWYWx1ZSIsInNvcnRfdmFsdWUiLCJ1bmRlZmluZWQiLCJjdXN0b21pemVycyIsInRyYW5zZm9ybVN0aWNrZXJQYWNrIiwicGFjayIsInN0aWNrZXJzIiwibWFwIiwic2t1SWQiLCJza3VfaWQiLCJjb3ZlclN0aWNrZXJJZCIsImNvdmVyX3N0aWNrZXJfaWQiLCJiYW5uZXJBc3NldElkIiwiYmFubmVyX2Fzc2V0X2lkIiwic3RpY2tlclBhY2siXSwibWFwcGluZ3MiOiJBQUtBLE9BQU8sU0FBU0EsaUJBQWlCQyxHQUFRLEVBQUVDLE9BQXVCO0lBQ2hFLE1BQU1DLFFBQVFGLElBQUlHLFlBQVksQ0FBQ0MsaUJBQWlCLENBQUNDLE9BQU87SUFDeEQsTUFBTUEsVUFBVSxDQUFDO0lBRWpCLElBQUlILE1BQU1JLEVBQUUsSUFBSUwsUUFBUUssRUFBRSxFQUFFRCxRQUFRQyxFQUFFLEdBQUdOLElBQUlHLFlBQVksQ0FBQ0ksU0FBUyxDQUFDTixRQUFRSyxFQUFFO0lBQzlFLElBQUlKLE1BQU1NLE1BQU0sSUFBSVAsUUFBUVEsT0FBTyxFQUFFSixRQUFRRyxNQUFNLEdBQUdSLElBQUlHLFlBQVksQ0FBQ0ksU0FBUyxDQUFDTixRQUFRUSxPQUFPO0lBQ2hHLElBQUlQLE1BQU1RLElBQUksSUFBSVQsUUFBUVMsSUFBSSxFQUFFTCxRQUFRSyxJQUFJLEdBQUdULFFBQVFTLElBQUk7SUFDM0QsSUFBSVIsTUFBTVMsV0FBVyxJQUFJVixRQUFRVSxXQUFXLEVBQUVOLFFBQVFNLFdBQVcsR0FBR1YsUUFBUVUsV0FBVztJQUN2RixJQUFJVCxNQUFNVSxJQUFJLElBQUlYLFFBQVFXLElBQUksRUFBRVAsUUFBUU8sSUFBSSxHQUFHWCxRQUFRVyxJQUFJO0lBQzNELElBQUlWLE1BQU1XLElBQUksSUFBSVosUUFBUVksSUFBSSxFQUFFUixRQUFRUSxJQUFJLEdBQUdaLFFBQVFZLElBQUk7SUFDM0QsSUFBSVgsTUFBTVksVUFBVSxJQUFJYixRQUFRYyxXQUFXLEVBQUVWLFFBQVFTLFVBQVUsR0FBR2IsUUFBUWMsV0FBVztJQUNyRixJQUFJYixNQUFNYyxTQUFTLElBQUlmLFFBQVFlLFNBQVMsRUFBRVgsUUFBUVcsU0FBUyxHQUFHZixRQUFRZSxTQUFTO0lBQy9FLElBQUlkLE1BQU1lLE9BQU8sSUFBSWhCLFFBQVFpQixRQUFRLEVBQUViLFFBQVFZLE9BQU8sR0FBR2pCLElBQUlHLFlBQVksQ0FBQ0ksU0FBUyxDQUFDTixRQUFRaUIsUUFBUTtJQUNwRyxJQUFJaEIsTUFBTWlCLElBQUksSUFBSWxCLFFBQVFrQixJQUFJLEVBQUVkLFFBQVFjLElBQUksR0FBR25CLElBQUlHLFlBQVksQ0FBQ2dCLElBQUksQ0FBQ25CLEtBQUtDLFFBQVFrQixJQUFJO0lBQ3RGLElBQUlqQixNQUFNa0IsU0FBUyxJQUFJbkIsUUFBUW9CLFVBQVUsS0FBS0MsV0FBV2pCLFFBQVFlLFNBQVMsR0FBR25CLFFBQVFvQixVQUFVO0lBRS9GLE9BQU9yQixJQUFJRyxZQUFZLENBQUNvQixXQUFXLENBQUNsQixPQUFPLENBQUNMLEtBQUtDLFNBQVNJO0FBQzVEO0FBRUEsT0FBTyxTQUFTbUIscUJBQXFCeEIsR0FBUSxFQUFFQyxPQUEyQjtJQUN4RSxNQUFNd0IsT0FBTztRQUNYbkIsSUFBSU4sSUFBSUcsWUFBWSxDQUFDSSxTQUFTLENBQUNOLFFBQVFLLEVBQUU7UUFDekNvQixVQUFVekIsUUFBUXlCLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDLENBQUN0QixVQUFZTCxJQUFJRyxZQUFZLENBQUNFLE9BQU8sQ0FBQ0wsS0FBS0s7UUFDMUVLLE1BQU1ULFFBQVFTLElBQUk7UUFDbEJrQixPQUFPNUIsSUFBSUcsWUFBWSxDQUFDSSxTQUFTLENBQUNOLFFBQVE0QixNQUFNO1FBQ2hEQyxnQkFBZ0I3QixRQUFROEIsZ0JBQWdCLEdBQUcvQixJQUFJRyxZQUFZLENBQUNJLFNBQVMsQ0FBQ04sUUFBUThCLGdCQUFnQixJQUFJVDtRQUNsR1gsYUFBYVYsUUFBUVUsV0FBVztRQUNoQ3FCLGVBQWUvQixRQUFRZ0MsZUFBZSxHQUFHakMsSUFBSUcsWUFBWSxDQUFDSSxTQUFTLENBQUNOLFFBQVFnQyxlQUFlLElBQUlYO0lBQ2pHO0lBRUEsT0FBT3RCLElBQUlHLFlBQVksQ0FBQ29CLFdBQVcsQ0FBQ1csV0FBVyxDQUFDbEMsS0FBS0MsU0FBU3dCO0FBQ2hFIn0=