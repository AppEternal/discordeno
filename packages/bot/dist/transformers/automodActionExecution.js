export function transformAutoModerationActionExecution(bot, payload) {
    const rule = {
        content: payload.content,
        ruleTriggerType: payload.rule_trigger_type,
        guildId: bot.transformers.snowflake(payload.guild_id),
        ruleId: bot.transformers.snowflake(payload.rule_id),
        userId: bot.transformers.snowflake(payload.user_id),
        channelId: payload.channel_id ? bot.transformers.snowflake(payload.channel_id) : undefined,
        messageId: payload.message_id ? bot.transformers.snowflake(payload.message_id) : undefined,
        alertSystemMessageId: payload.alert_system_message_id ? bot.transformers.snowflake(payload.alert_system_message_id) : undefined,
        matchedKeyword: payload.matched_keyword ?? '',
        matchedContent: payload.matched_content ?? '',
        action: {
            type: payload.action.type,
            metadata: payload.action.metadata ? {
                durationSeconds: payload.action.metadata.duration_seconds,
                customMessage: payload.action.metadata.custom_message,
                channelId: payload.action.metadata.channel_id ? bot.transformers.snowflake(payload.action.metadata.channel_id) : undefined
            } : undefined
        }
    };
    return bot.transformers.customizers.automodActionExecution(bot, payload, rule);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvYXV0b21vZEFjdGlvbkV4ZWN1dGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERpc2NvcmRBdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvbiB9IGZyb20gJ0BkaXNjb3JkZW5vL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBCb3QgfSBmcm9tICcuLi9ib3QuanMnXG5pbXBvcnQgdHlwZSB7IEF1dG9Nb2RlcmF0aW9uQWN0aW9uRXhlY3V0aW9uIH0gZnJvbSAnLi90eXBlcy5qcydcblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUF1dG9Nb2RlcmF0aW9uQWN0aW9uRXhlY3V0aW9uKGJvdDogQm90LCBwYXlsb2FkOiBEaXNjb3JkQXV0b01vZGVyYXRpb25BY3Rpb25FeGVjdXRpb24pOiBBdXRvTW9kZXJhdGlvbkFjdGlvbkV4ZWN1dGlvbiB7XG4gIGNvbnN0IHJ1bGUgPSB7XG4gICAgY29udGVudDogcGF5bG9hZC5jb250ZW50LFxuICAgIHJ1bGVUcmlnZ2VyVHlwZTogcGF5bG9hZC5ydWxlX3RyaWdnZXJfdHlwZSxcbiAgICBndWlsZElkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmd1aWxkX2lkKSxcbiAgICBydWxlSWQ6IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQucnVsZV9pZCksXG4gICAgdXNlcklkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLnVzZXJfaWQpLFxuICAgIGNoYW5uZWxJZDogcGF5bG9hZC5jaGFubmVsX2lkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5jaGFubmVsX2lkKSA6IHVuZGVmaW5lZCxcbiAgICBtZXNzYWdlSWQ6IHBheWxvYWQubWVzc2FnZV9pZCA/IGJvdC50cmFuc2Zvcm1lcnMuc25vd2ZsYWtlKHBheWxvYWQubWVzc2FnZV9pZCkgOiB1bmRlZmluZWQsXG4gICAgYWxlcnRTeXN0ZW1NZXNzYWdlSWQ6IHBheWxvYWQuYWxlcnRfc3lzdGVtX21lc3NhZ2VfaWQgPyBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLmFsZXJ0X3N5c3RlbV9tZXNzYWdlX2lkKSA6IHVuZGVmaW5lZCxcbiAgICBtYXRjaGVkS2V5d29yZDogcGF5bG9hZC5tYXRjaGVkX2tleXdvcmQgPz8gJycsXG4gICAgbWF0Y2hlZENvbnRlbnQ6IHBheWxvYWQubWF0Y2hlZF9jb250ZW50ID8/ICcnLFxuICAgIGFjdGlvbjoge1xuICAgICAgdHlwZTogcGF5bG9hZC5hY3Rpb24udHlwZSxcbiAgICAgIG1ldGFkYXRhOiBwYXlsb2FkLmFjdGlvbi5tZXRhZGF0YVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGR1cmF0aW9uU2Vjb25kczogcGF5bG9hZC5hY3Rpb24ubWV0YWRhdGEuZHVyYXRpb25fc2Vjb25kcyxcbiAgICAgICAgICAgIGN1c3RvbU1lc3NhZ2U6IHBheWxvYWQuYWN0aW9uLm1ldGFkYXRhLmN1c3RvbV9tZXNzYWdlLFxuICAgICAgICAgICAgY2hhbm5lbElkOiBwYXlsb2FkLmFjdGlvbi5tZXRhZGF0YS5jaGFubmVsX2lkID8gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5hY3Rpb24ubWV0YWRhdGEuY2hhbm5lbF9pZCkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgfVxuICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICB9LFxuICB9IGFzIEF1dG9Nb2RlcmF0aW9uQWN0aW9uRXhlY3V0aW9uXG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY3VzdG9taXplcnMuYXV0b21vZEFjdGlvbkV4ZWN1dGlvbihib3QsIHBheWxvYWQsIHJ1bGUpXG59XG4iXSwibmFtZXMiOlsidHJhbnNmb3JtQXV0b01vZGVyYXRpb25BY3Rpb25FeGVjdXRpb24iLCJib3QiLCJwYXlsb2FkIiwicnVsZSIsImNvbnRlbnQiLCJydWxlVHJpZ2dlclR5cGUiLCJydWxlX3RyaWdnZXJfdHlwZSIsImd1aWxkSWQiLCJ0cmFuc2Zvcm1lcnMiLCJzbm93Zmxha2UiLCJndWlsZF9pZCIsInJ1bGVJZCIsInJ1bGVfaWQiLCJ1c2VySWQiLCJ1c2VyX2lkIiwiY2hhbm5lbElkIiwiY2hhbm5lbF9pZCIsInVuZGVmaW5lZCIsIm1lc3NhZ2VJZCIsIm1lc3NhZ2VfaWQiLCJhbGVydFN5c3RlbU1lc3NhZ2VJZCIsImFsZXJ0X3N5c3RlbV9tZXNzYWdlX2lkIiwibWF0Y2hlZEtleXdvcmQiLCJtYXRjaGVkX2tleXdvcmQiLCJtYXRjaGVkQ29udGVudCIsIm1hdGNoZWRfY29udGVudCIsImFjdGlvbiIsInR5cGUiLCJtZXRhZGF0YSIsImR1cmF0aW9uU2Vjb25kcyIsImR1cmF0aW9uX3NlY29uZHMiLCJjdXN0b21NZXNzYWdlIiwiY3VzdG9tX21lc3NhZ2UiLCJjdXN0b21pemVycyIsImF1dG9tb2RBY3Rpb25FeGVjdXRpb24iXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sU0FBU0EsdUNBQXVDQyxHQUFRLEVBQUVDLE9BQTZDO0lBQzVHLE1BQU1DLE9BQU87UUFDWEMsU0FBU0YsUUFBUUUsT0FBTztRQUN4QkMsaUJBQWlCSCxRQUFRSSxpQkFBaUI7UUFDMUNDLFNBQVNOLElBQUlPLFlBQVksQ0FBQ0MsU0FBUyxDQUFDUCxRQUFRUSxRQUFRO1FBQ3BEQyxRQUFRVixJQUFJTyxZQUFZLENBQUNDLFNBQVMsQ0FBQ1AsUUFBUVUsT0FBTztRQUNsREMsUUFBUVosSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVFZLE9BQU87UUFDbERDLFdBQVdiLFFBQVFjLFVBQVUsR0FBR2YsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVFjLFVBQVUsSUFBSUM7UUFDakZDLFdBQVdoQixRQUFRaUIsVUFBVSxHQUFHbEIsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVFpQixVQUFVLElBQUlGO1FBQ2pGRyxzQkFBc0JsQixRQUFRbUIsdUJBQXVCLEdBQUdwQixJQUFJTyxZQUFZLENBQUNDLFNBQVMsQ0FBQ1AsUUFBUW1CLHVCQUF1QixJQUFJSjtRQUN0SEssZ0JBQWdCcEIsUUFBUXFCLGVBQWUsSUFBSTtRQUMzQ0MsZ0JBQWdCdEIsUUFBUXVCLGVBQWUsSUFBSTtRQUMzQ0MsUUFBUTtZQUNOQyxNQUFNekIsUUFBUXdCLE1BQU0sQ0FBQ0MsSUFBSTtZQUN6QkMsVUFBVTFCLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsR0FDN0I7Z0JBQ0VDLGlCQUFpQjNCLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ0UsZ0JBQWdCO2dCQUN6REMsZUFBZTdCLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ0ksY0FBYztnQkFDckRqQixXQUFXYixRQUFRd0IsTUFBTSxDQUFDRSxRQUFRLENBQUNaLFVBQVUsR0FBR2YsSUFBSU8sWUFBWSxDQUFDQyxTQUFTLENBQUNQLFFBQVF3QixNQUFNLENBQUNFLFFBQVEsQ0FBQ1osVUFBVSxJQUFJQztZQUNuSCxJQUNBQTtRQUNOO0lBQ0Y7SUFFQSxPQUFPaEIsSUFBSU8sWUFBWSxDQUFDeUIsV0FBVyxDQUFDQyxzQkFBc0IsQ0FBQ2pDLEtBQUtDLFNBQVNDO0FBQzNFIn0=