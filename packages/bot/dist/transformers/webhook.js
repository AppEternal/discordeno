import { iconHashToBigInt } from '@discordeno/utils'
export function transformWebhook(bot, payload) {
  const props = bot.transformers.desiredProperties.webhook
  const webhook = {}
  if (props.id && payload.id) webhook.id = bot.transformers.snowflake(payload.id)
  if (props.type && payload.type) webhook.type = payload.type
  if (props.guildId && payload.guild_id) webhook.guildId = bot.transformers.snowflake(payload.guild_id)
  if (props.channelId && payload.channel_id) webhook.channelId = bot.transformers.snowflake(payload.channel_id)
  if (props.user && payload.user) webhook.user = bot.transformers.user(bot, payload.user)
  if (props.name && payload.name) webhook.name = payload.name
  if (props.avatar && payload.avatar) webhook.avatar = iconHashToBigInt(payload.avatar)
  if (props.token && payload.token) webhook.token = payload.token
  if (props.applicationId && payload.application_id) webhook.applicationId = bot.transformers.snowflake(payload.application_id)
  if (props.sourceGuild && payload.source_guild)
    webhook.sourceGuild = {
      id: bot.transformers.snowflake(payload.source_guild.id),
      name: payload.source_guild.name,
      icon: payload.source_guild.icon ? iconHashToBigInt(payload.source_guild.icon) : undefined,
    }
  if (props.sourceChannel && payload.source_channel)
    webhook.sourceChannel = {
      id: bot.transformers.snowflake(payload.source_channel.id),
      name: payload.source_channel.name ?? '',
    }
  if (props.url && payload.url) webhook.url = payload.url
  return bot.transformers.customizers.webhook(bot, payload, webhook)
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2Zvcm1lcnMvd2ViaG9vay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERpc2NvcmRXZWJob29rIH0gZnJvbSAnQGRpc2NvcmRlbm8vdHlwZXMnXG5pbXBvcnQgeyBpY29uSGFzaFRvQmlnSW50IH0gZnJvbSAnQGRpc2NvcmRlbm8vdXRpbHMnXG5pbXBvcnQgdHlwZSB7IEJvdCB9IGZyb20gJy4uL2JvdC5qcydcbmltcG9ydCB0eXBlIHsgRGVzaXJlZFByb3BlcnRpZXNCZWhhdmlvciwgU2V0dXBEZXNpcmVkUHJvcHMsIFRyYW5zZm9ybWVyc0Rlc2lyZWRQcm9wZXJ0aWVzIH0gZnJvbSAnLi4vZGVzaXJlZFByb3BlcnRpZXMuanMnXG5pbXBvcnQgdHlwZSB7IFdlYmhvb2sgfSBmcm9tICcuL3R5cGVzLmpzJ1xuXG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtV2ViaG9vayhib3Q6IEJvdCwgcGF5bG9hZDogRGlzY29yZFdlYmhvb2spOiB0eXBlb2YgYm90LnRyYW5zZm9ybWVycy4kaW5mZXJyZWRUeXBlcy53ZWJob29rIHtcbiAgY29uc3QgcHJvcHMgPSBib3QudHJhbnNmb3JtZXJzLmRlc2lyZWRQcm9wZXJ0aWVzLndlYmhvb2tcbiAgY29uc3Qgd2ViaG9vayA9IHt9IGFzIFNldHVwRGVzaXJlZFByb3BzPFdlYmhvb2ssIFRyYW5zZm9ybWVyc0Rlc2lyZWRQcm9wZXJ0aWVzLCBEZXNpcmVkUHJvcGVydGllc0JlaGF2aW9yPlxuXG4gIGlmIChwcm9wcy5pZCAmJiBwYXlsb2FkLmlkKSB3ZWJob29rLmlkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5pZClcbiAgaWYgKHByb3BzLnR5cGUgJiYgcGF5bG9hZC50eXBlKSB3ZWJob29rLnR5cGUgPSBwYXlsb2FkLnR5cGVcbiAgaWYgKHByb3BzLmd1aWxkSWQgJiYgcGF5bG9hZC5ndWlsZF9pZCkgd2ViaG9vay5ndWlsZElkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5ndWlsZF9pZClcbiAgaWYgKHByb3BzLmNoYW5uZWxJZCAmJiBwYXlsb2FkLmNoYW5uZWxfaWQpIHdlYmhvb2suY2hhbm5lbElkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5jaGFubmVsX2lkKVxuICBpZiAocHJvcHMudXNlciAmJiBwYXlsb2FkLnVzZXIpIHdlYmhvb2sudXNlciA9IGJvdC50cmFuc2Zvcm1lcnMudXNlcihib3QsIHBheWxvYWQudXNlcilcbiAgaWYgKHByb3BzLm5hbWUgJiYgcGF5bG9hZC5uYW1lKSB3ZWJob29rLm5hbWUgPSBwYXlsb2FkLm5hbWVcbiAgaWYgKHByb3BzLmF2YXRhciAmJiBwYXlsb2FkLmF2YXRhcikgd2ViaG9vay5hdmF0YXIgPSBpY29uSGFzaFRvQmlnSW50KHBheWxvYWQuYXZhdGFyKVxuICBpZiAocHJvcHMudG9rZW4gJiYgcGF5bG9hZC50b2tlbikgd2ViaG9vay50b2tlbiA9IHBheWxvYWQudG9rZW5cbiAgaWYgKHByb3BzLmFwcGxpY2F0aW9uSWQgJiYgcGF5bG9hZC5hcHBsaWNhdGlvbl9pZCkgd2ViaG9vay5hcHBsaWNhdGlvbklkID0gYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5hcHBsaWNhdGlvbl9pZClcbiAgaWYgKHByb3BzLnNvdXJjZUd1aWxkICYmIHBheWxvYWQuc291cmNlX2d1aWxkKVxuICAgIHdlYmhvb2suc291cmNlR3VpbGQgPSB7XG4gICAgICBpZDogYm90LnRyYW5zZm9ybWVycy5zbm93Zmxha2UocGF5bG9hZC5zb3VyY2VfZ3VpbGQuaWQhKSxcbiAgICAgIG5hbWU6IHBheWxvYWQuc291cmNlX2d1aWxkLm5hbWUhLFxuICAgICAgaWNvbjogcGF5bG9hZC5zb3VyY2VfZ3VpbGQuaWNvbiA/IGljb25IYXNoVG9CaWdJbnQocGF5bG9hZC5zb3VyY2VfZ3VpbGQuaWNvbikgOiB1bmRlZmluZWQsXG4gICAgfVxuICBpZiAocHJvcHMuc291cmNlQ2hhbm5lbCAmJiBwYXlsb2FkLnNvdXJjZV9jaGFubmVsKVxuICAgIHdlYmhvb2suc291cmNlQ2hhbm5lbCA9IHtcbiAgICAgIGlkOiBib3QudHJhbnNmb3JtZXJzLnNub3dmbGFrZShwYXlsb2FkLnNvdXJjZV9jaGFubmVsLmlkISksXG4gICAgICBuYW1lOiBwYXlsb2FkLnNvdXJjZV9jaGFubmVsLm5hbWUgPz8gJycsXG4gICAgfVxuICBpZiAocHJvcHMudXJsICYmIHBheWxvYWQudXJsKSB3ZWJob29rLnVybCA9IHBheWxvYWQudXJsXG5cbiAgcmV0dXJuIGJvdC50cmFuc2Zvcm1lcnMuY3VzdG9taXplcnMud2ViaG9vayhib3QsIHBheWxvYWQsIHdlYmhvb2spXG59XG4iXSwibmFtZXMiOlsiaWNvbkhhc2hUb0JpZ0ludCIsInRyYW5zZm9ybVdlYmhvb2siLCJib3QiLCJwYXlsb2FkIiwicHJvcHMiLCJ0cmFuc2Zvcm1lcnMiLCJkZXNpcmVkUHJvcGVydGllcyIsIndlYmhvb2siLCJpZCIsInNub3dmbGFrZSIsInR5cGUiLCJndWlsZElkIiwiZ3VpbGRfaWQiLCJjaGFubmVsSWQiLCJjaGFubmVsX2lkIiwidXNlciIsIm5hbWUiLCJhdmF0YXIiLCJ0b2tlbiIsImFwcGxpY2F0aW9uSWQiLCJhcHBsaWNhdGlvbl9pZCIsInNvdXJjZUd1aWxkIiwic291cmNlX2d1aWxkIiwiaWNvbiIsInVuZGVmaW5lZCIsInNvdXJjZUNoYW5uZWwiLCJzb3VyY2VfY2hhbm5lbCIsInVybCIsImN1c3RvbWl6ZXJzIl0sIm1hcHBpbmdzIjoiQUFDQSxTQUFTQSxnQkFBZ0IsUUFBUSxvQkFBbUI7QUFLcEQsT0FBTyxTQUFTQyxpQkFBaUJDLEdBQVEsRUFBRUMsT0FBdUI7SUFDaEUsTUFBTUMsUUFBUUYsSUFBSUcsWUFBWSxDQUFDQyxpQkFBaUIsQ0FBQ0MsT0FBTztJQUN4RCxNQUFNQSxVQUFVLENBQUM7SUFFakIsSUFBSUgsTUFBTUksRUFBRSxJQUFJTCxRQUFRSyxFQUFFLEVBQUVELFFBQVFDLEVBQUUsR0FBR04sSUFBSUcsWUFBWSxDQUFDSSxTQUFTLENBQUNOLFFBQVFLLEVBQUU7SUFDOUUsSUFBSUosTUFBTU0sSUFBSSxJQUFJUCxRQUFRTyxJQUFJLEVBQUVILFFBQVFHLElBQUksR0FBR1AsUUFBUU8sSUFBSTtJQUMzRCxJQUFJTixNQUFNTyxPQUFPLElBQUlSLFFBQVFTLFFBQVEsRUFBRUwsUUFBUUksT0FBTyxHQUFHVCxJQUFJRyxZQUFZLENBQUNJLFNBQVMsQ0FBQ04sUUFBUVMsUUFBUTtJQUNwRyxJQUFJUixNQUFNUyxTQUFTLElBQUlWLFFBQVFXLFVBQVUsRUFBRVAsUUFBUU0sU0FBUyxHQUFHWCxJQUFJRyxZQUFZLENBQUNJLFNBQVMsQ0FBQ04sUUFBUVcsVUFBVTtJQUM1RyxJQUFJVixNQUFNVyxJQUFJLElBQUlaLFFBQVFZLElBQUksRUFBRVIsUUFBUVEsSUFBSSxHQUFHYixJQUFJRyxZQUFZLENBQUNVLElBQUksQ0FBQ2IsS0FBS0MsUUFBUVksSUFBSTtJQUN0RixJQUFJWCxNQUFNWSxJQUFJLElBQUliLFFBQVFhLElBQUksRUFBRVQsUUFBUVMsSUFBSSxHQUFHYixRQUFRYSxJQUFJO0lBQzNELElBQUlaLE1BQU1hLE1BQU0sSUFBSWQsUUFBUWMsTUFBTSxFQUFFVixRQUFRVSxNQUFNLEdBQUdqQixpQkFBaUJHLFFBQVFjLE1BQU07SUFDcEYsSUFBSWIsTUFBTWMsS0FBSyxJQUFJZixRQUFRZSxLQUFLLEVBQUVYLFFBQVFXLEtBQUssR0FBR2YsUUFBUWUsS0FBSztJQUMvRCxJQUFJZCxNQUFNZSxhQUFhLElBQUloQixRQUFRaUIsY0FBYyxFQUFFYixRQUFRWSxhQUFhLEdBQUdqQixJQUFJRyxZQUFZLENBQUNJLFNBQVMsQ0FBQ04sUUFBUWlCLGNBQWM7SUFDNUgsSUFBSWhCLE1BQU1pQixXQUFXLElBQUlsQixRQUFRbUIsWUFBWSxFQUMzQ2YsUUFBUWMsV0FBVyxHQUFHO1FBQ3BCYixJQUFJTixJQUFJRyxZQUFZLENBQUNJLFNBQVMsQ0FBQ04sUUFBUW1CLFlBQVksQ0FBQ2QsRUFBRTtRQUN0RFEsTUFBTWIsUUFBUW1CLFlBQVksQ0FBQ04sSUFBSTtRQUMvQk8sTUFBTXBCLFFBQVFtQixZQUFZLENBQUNDLElBQUksR0FBR3ZCLGlCQUFpQkcsUUFBUW1CLFlBQVksQ0FBQ0MsSUFBSSxJQUFJQztJQUNsRjtJQUNGLElBQUlwQixNQUFNcUIsYUFBYSxJQUFJdEIsUUFBUXVCLGNBQWMsRUFDL0NuQixRQUFRa0IsYUFBYSxHQUFHO1FBQ3RCakIsSUFBSU4sSUFBSUcsWUFBWSxDQUFDSSxTQUFTLENBQUNOLFFBQVF1QixjQUFjLENBQUNsQixFQUFFO1FBQ3hEUSxNQUFNYixRQUFRdUIsY0FBYyxDQUFDVixJQUFJLElBQUk7SUFDdkM7SUFDRixJQUFJWixNQUFNdUIsR0FBRyxJQUFJeEIsUUFBUXdCLEdBQUcsRUFBRXBCLFFBQVFvQixHQUFHLEdBQUd4QixRQUFRd0IsR0FBRztJQUV2RCxPQUFPekIsSUFBSUcsWUFBWSxDQUFDdUIsV0FBVyxDQUFDckIsT0FBTyxDQUFDTCxLQUFLQyxTQUFTSTtBQUM1RCJ9
