/** Types for: https://discord.com/developers/docs/resources/webhook */ /** https://discord.com/developers/docs/resources/webhook#delete-webhook-message-query-string-params */ export { };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaXNjb3JkZW5vL3dlYmhvb2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFR5cGVzIGZvcjogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3dlYmhvb2sgKi9cblxuaW1wb3J0IHR5cGUgeyBEaXNjb3JkQXR0YWNobWVudCwgRGlzY29yZEVtYmVkIH0gZnJvbSAnLi4vZGlzY29yZC9tZXNzYWdlLmpzJ1xuaW1wb3J0IHR5cGUgeyBCaWdTdHJpbmcsIENhbWVsaXplIH0gZnJvbSAnLi4vc2hhcmVkLmpzJ1xuaW1wb3J0IHR5cGUgeyBNZXNzYWdlQ29tcG9uZW50cyB9IGZyb20gJy4vY29tcG9uZW50cy5qcydcbmltcG9ydCB0eXBlIHsgQWxsb3dlZE1lbnRpb25zIH0gZnJvbSAnLi9tZXNzYWdlLmpzJ1xuaW1wb3J0IHR5cGUgeyBDcmVhdGVQb2xsIH0gZnJvbSAnLi9wb2xsLmpzJ1xuaW1wb3J0IHR5cGUgeyBGaWxlQ29udGVudCB9IGZyb20gJy4vcmVmZXJlbmNlLmpzJ1xuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3dlYmhvb2sjY3JlYXRlLXdlYmhvb2stanNvbi1wYXJhbXMgKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlV2ViaG9vayB7XG4gIC8qKiBOYW1lIG9mIHRoZSB3ZWJob29rICgxLTgwIGNoYXJhY3RlcnMpICovXG4gIG5hbWU6IHN0cmluZ1xuICAvKiogSW1hZ2UgdXJsIGZvciB0aGUgZGVmYXVsdCB3ZWJob29rIGF2YXRhciAqL1xuICBhdmF0YXI/OiBzdHJpbmcgfCBudWxsXG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvd2ViaG9vayNtb2RpZnktd2ViaG9vay1qc29uLXBhcmFtcyAqL1xuZXhwb3J0IGludGVyZmFjZSBNb2RpZnlXZWJob29rIHtcbiAgLyoqIFRoZSBkZWZhdWx0IG5hbWUgb2YgdGhlIHdlYmhvb2sgKi9cbiAgbmFtZT86IHN0cmluZ1xuICAvKiogSW1hZ2UgZm9yIHRoZSBkZWZhdWx0IHdlYmhvb2sgYXZhdGFyICovXG4gIGF2YXRhcj86IEJpZ1N0cmluZyB8IG51bGxcbiAgLyoqIFRoZSBuZXcgY2hhbm5lbCBpZCB0aGlzIHdlYmhvb2sgc2hvdWxkIGJlIG1vdmVkIHRvICovXG4gIGNoYW5uZWxJZD86IEJpZ1N0cmluZ1xufVxuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3dlYmhvb2sjZXhlY3V0ZS13ZWJob29rICovXG5leHBvcnQgaW50ZXJmYWNlIEV4ZWN1dGVXZWJob29rIHtcbiAgLy8gUXVlcnkgUGFyYW1ldGVyc1xuXG4gIC8qKiBXYWl0cyBmb3Igc2VydmVyIGNvbmZpcm1hdGlvbiBvZiBtZXNzYWdlIHNlbmQgYmVmb3JlIHJlc3BvbnNlLCBhbmQgcmV0dXJucyB0aGUgY3JlYXRlZCBtZXNzYWdlIGJvZHkgKGRlZmF1bHRzIHRvIGBmYWxzZWA7IHdoZW4gYGZhbHNlYCBhIG1lc3NhZ2UgdGhhdCBpcyBub3Qgc2F2ZWQgZG9lcyBub3QgcmV0dXJuIGFuIGVycm9yKSAqL1xuICB3YWl0PzogYm9vbGVhblxuICAvKiogU2VuZCBhIG1lc3NhZ2UgdG8gdGhlIHNwZWNpZmllZCB0aHJlYWQgd2l0aGluIGEgd2ViaG9vaydzIGNoYW5uZWwuIFRoZSB0aHJlYWQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHVuYXJjaGl2ZWQuICovXG4gIHRocmVhZElkPzogQmlnU3RyaW5nXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIHJlc3BlY3QgdGhlIGBjb21wb25lbnRzYCBmaWVsZCBvZiB0aGUgcmVxdWVzdC5cbiAgICogV2hlbiBlbmFibGVkLCBhbGxvd3MgYXBwbGljYXRpb24tb3duZWQgd2ViaG9va3MgdG8gdXNlIGFsbCBjb21wb25lbnRzIGFuZCBub24tb3duZWQgd2ViaG9va3MgdG8gdXNlIG5vbi1pbnRlcmFjdGl2ZSBjb21wb25lbnRzLlxuICAgKlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgd2l0aENvbXBvbmVudHM/OiBib29sZWFuXG5cbiAgLy8gSlNPTiBQYXJhbWV0ZXJzXG5cbiAgLyoqIFRoZSBtZXNzYWdlIGNvbnRlbnRzICh1cCB0byAyMDAwIGNoYXJhY3RlcnMpICovXG4gIGNvbnRlbnQ/OiBzdHJpbmdcbiAgLyoqIE92ZXJyaWRlIHRoZSBkZWZhdWx0IHVzZXJuYW1lIG9mIHRoZSB3ZWJob29rICovXG4gIHVzZXJuYW1lPzogc3RyaW5nXG4gIC8qKiBPdmVycmlkZSB0aGUgZGVmYXVsdCBhdmF0YXIgb2YgdGhlIHdlYmhvb2sgKi9cbiAgYXZhdGFyVXJsPzogc3RyaW5nXG4gIC8qKiBUcnVlIGlmIHRoaXMgaXMgYSBUVFMgbWVzc2FnZSAqL1xuICB0dHM/OiBib29sZWFuXG4gIC8qKiBFbWJlZGRlZCBgcmljaGAgY29udGVudCAqL1xuICBlbWJlZHM/OiBDYW1lbGl6ZTxEaXNjb3JkRW1iZWQ+W11cbiAgLyoqIEFsbG93ZWQgbWVudGlvbnMgZm9yIHRoZSBtZXNzYWdlICovXG4gIGFsbG93ZWRNZW50aW9ucz86IEFsbG93ZWRNZW50aW9uc1xuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdG8gaW5jbHVkZSB3aXRoIHRoZSBtZXNzYWdlXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIEFwcGxpY2F0aW9uLW93bmVkIHdlYmhvb2tzIGNhbiBhbHdheXMgc2VuZCBjb21wb25lbnRzLlxuICAgKiBOb24tYXBwbGljYXRpb24tb3duZWQgd2ViaG9va3MgY2Fubm90IHNlbmQgaW50ZXJhY3RpdmUgY29tcG9uZW50cywgYW5kIHRoZSBgY29tcG9uZW50c2AgZmllbGQgd2lsbCBiZSBpZ25vcmVkIHVubGVzcyB0aGV5IHNldCB0aGUgYHdpdGhfY29tcG9uZW50c2AgcXVlcnkgcGFyYW0uXG4gICAqL1xuICBjb21wb25lbnRzPzogTWVzc2FnZUNvbXBvbmVudHNcbiAgLyoqIFRoZSBjb250ZW50cyBvZiB0aGUgZmlsZXMgYmVpbmcgc2VudCAqL1xuICBmaWxlcz86IEZpbGVDb250ZW50W11cbiAgLyoqIEF0dGFjaG1lbnQgb2JqZWN0cyB3aXRoIGZpbGVuYW1lIGFuZCBkZXNjcmlwdGlvbiAqL1xuICBhdHRhY2htZW50cz86IFBpY2s8RGlzY29yZEF0dGFjaG1lbnQsICdmaWxlbmFtZScgfCAnZGVzY3JpcHRpb24nIHwgJ2lkJz5bXVxuICAvKipcbiAgICogTWVzc2FnZSBmbGFncyBjb21iaW5lZCBpbiBhIGJpdGZpZWxkXG4gICAqXG4gICAqIEBzZWUge0BsaW5rIE1lc3NhZ2VGbGFnc31cbiAgICovXG4gIGZsYWdzPzogbnVtYmVyXG4gIC8qKiBOYW1lIG9mIHRoZSB0aHJlYWQgdG8gY3JlYXRlICh0YXJnZXQgY2hhbm5lbCBoYXMgdG8gYmUgdHlwZSBvZiBmb3J1bSBjaGFubmVsKSAqL1xuICB0aHJlYWROYW1lPzogc3RyaW5nXG4gIC8qKiBBcnJheSBvZiB0YWcgaWRzIHRvIGFwcGx5IHRvIHRoZSB0aHJlYWQgKHJlcXVpcmVzIHRoZSB3ZWJob29rIGNoYW5uZWwgdG8gYmUgYSBmb3J1bSBvciBtZWRpYSBjaGFubmVsKSAqL1xuICBhcHBsaWVkVGFncz86IEJpZ1N0cmluZ1tdXG4gIC8qKiBBIHBvbGwgb2JqZWN0ICovXG4gIHBvbGw/OiBDcmVhdGVQb2xsXG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvd2ViaG9vayNnZXQtd2ViaG9vay1tZXNzYWdlLXF1ZXJ5LXN0cmluZy1wYXJhbXMgKi9cbmV4cG9ydCBpbnRlcmZhY2UgR2V0V2ViaG9va01lc3NhZ2VPcHRpb25zIHtcbiAgLyoqIGlkIG9mIHRoZSB0aHJlYWQgdGhlIG1lc3NhZ2UgaXMgaW4gKi9cbiAgdGhyZWFkSWQ6IEJpZ1N0cmluZ1xufVxuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3dlYmhvb2sjZWRpdC13ZWJob29rLW1lc3NhZ2UgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRWRpdFdlYmhvb2tNZXNzYWdlT3B0aW9ucyB7XG4gIC8vIFF1ZXJ5IHBhcmFtZXRlcnNcbiAgLyoqIElkIG9mIHRoZSB0aHJlYWQgdGhlIG1lc3NhZ2UgaXMgaW4gKi9cbiAgdGhyZWFkSWQ/OiBCaWdTdHJpbmdcbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gcmVzcGVjdCB0aGUgYGNvbXBvbmVudHNgIGZpZWxkIG9mIHRoZSByZXF1ZXN0LlxuICAgKiBXaGVuIGVuYWJsZWQsIGFsbG93cyBhcHBsaWNhdGlvbi1vd25lZCB3ZWJob29rcyB0byB1c2UgYWxsIGNvbXBvbmVudHMgYW5kIG5vbi1vd25lZCB3ZWJob29rcyB0byB1c2Ugbm9uLWludGVyYWN0aXZlIGNvbXBvbmVudHMuXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICB3aXRoQ29tcG9uZW50cz86IGJvb2xlYW5cblxuICAvLyBKU09OIHBhcmFtZXRlcnNcblxuICAvKiogVGhlIG1lc3NhZ2UgY29udGVudHMgKHVwIHRvIDIwMDAgY2hhcmFjdGVycykgKi9cbiAgY29udGVudD86IHN0cmluZ1xuICAvKiogRW1iZWRkZWQgYHJpY2hgIGNvbnRlbnQgKi9cbiAgZW1iZWRzPzogQ2FtZWxpemU8RGlzY29yZEVtYmVkPltdXG4gIC8qKlxuICAgKiBNZXNzYWdlIGZsYWdzIGNvbWJpbmVkIGluIGEgYml0ZmllbGRcbiAgICpcbiAgICogQHNlZSB7QGxpbmsgTWVzc2FnZUZsYWdzfVxuICAgKi9cbiAgZmxhZ3M/OiBudW1iZXJcbiAgLyoqIEFsbG93ZWQgbWVudGlvbnMgZm9yIHRoZSBtZXNzYWdlICovXG4gIGFsbG93ZWRNZW50aW9ucz86IEFsbG93ZWRNZW50aW9uc1xuICAvKipcbiAgICogVGhlIGNvbXBvbmVudHMgdG8gaW5jbHVkZSB3aXRoIHRoZSBtZXNzYWdlXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIEFwcGxpY2F0aW9uLW93bmVkIHdlYmhvb2tzIGNhbiBhbHdheXMgc2VuZCBjb21wb25lbnRzLlxuICAgKiBOb24tYXBwbGljYXRpb24tb3duZWQgd2ViaG9va3MgY2Fubm90IHNlbmQgaW50ZXJhY3RpdmUgY29tcG9uZW50cywgYW5kIHRoZSBgY29tcG9uZW50c2AgZmllbGQgd2lsbCBiZSBpZ25vcmVkIHVubGVzcyB0aGV5IHNldCB0aGUgYHdpdGhfY29tcG9uZW50c2AgcXVlcnkgcGFyYW0uXG4gICAqL1xuICBjb21wb25lbnRzPzogTWVzc2FnZUNvbXBvbmVudHNcbiAgLyoqIFRoZSBjb250ZW50cyBvZiB0aGUgZmlsZXMgYmVpbmcgc2VudCAqL1xuICBmaWxlcz86IEZpbGVDb250ZW50W11cbiAgLyoqIEF0dGFjaGVkIGZpbGVzIHRvIGtlZXAgYW5kIHBvc3NpYmxlIGRlc2NyaXB0aW9ucyBmb3IgbmV3IGZpbGVzICovXG4gIGF0dGFjaG1lbnRzPzogUGljazxEaXNjb3JkQXR0YWNobWVudCwgJ2ZpbGVuYW1lJyB8ICdkZXNjcmlwdGlvbicgfCAnaWQnPltdXG4gIC8qKlxuICAgKiBBIHBvbGwhXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIFBvbGxzIGNhbiBvbmx5IGJlIGFkZGVkIHdoZW4gZWRpdGluZyBhIGRlZmVycmVkIGludGVyYWN0aW9uIHJlc3BvbnNlLlxuICAgKi9cbiAgcG9sbD86IENyZWF0ZVBvbGxcbn1cblxuLyoqIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy93ZWJob29rI2RlbGV0ZS13ZWJob29rLW1lc3NhZ2UtcXVlcnktc3RyaW5nLXBhcmFtcyAqL1xuZXhwb3J0IGludGVyZmFjZSBEZWxldGVXZWJob29rTWVzc2FnZU9wdGlvbnMge1xuICAvKiogaWQgb2YgdGhlIHRocmVhZCB0aGUgbWVzc2FnZSBpcyBpbiAqL1xuICB0aHJlYWRJZDogQmlnU3RyaW5nXG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUVBQXFFLEdBeUlyRSxxR0FBcUcsR0FDckcsV0FHQyJ9