/** Types for: https://discord.com/developers/docs/resources/audit-log */ /** https://discord.com/developers/docs/resources/audit-log#audit-log-entry-object-audit-log-events */ export var AuditLogEvents = /*#__PURE__*/ function(AuditLogEvents) {
    /** Server settings were updated */ AuditLogEvents[AuditLogEvents["GuildUpdate"] = 1] = "GuildUpdate";
    /** Channel was created */ AuditLogEvents[AuditLogEvents["ChannelCreate"] = 10] = "ChannelCreate";
    /** Channel settings were updated */ AuditLogEvents[AuditLogEvents["ChannelUpdate"] = 11] = "ChannelUpdate";
    /** Channel was deleted */ AuditLogEvents[AuditLogEvents["ChannelDelete"] = 12] = "ChannelDelete";
    /** Permission overwrite was added to a channel */ AuditLogEvents[AuditLogEvents["ChannelOverwriteCreate"] = 13] = "ChannelOverwriteCreate";
    /** Permission overwrite was updated for a channel */ AuditLogEvents[AuditLogEvents["ChannelOverwriteUpdate"] = 14] = "ChannelOverwriteUpdate";
    /** Permission overwrite was deleted from a channel */ AuditLogEvents[AuditLogEvents["ChannelOverwriteDelete"] = 15] = "ChannelOverwriteDelete";
    /** Member was removed from server */ AuditLogEvents[AuditLogEvents["MemberKick"] = 20] = "MemberKick";
    /** Members were pruned from server */ AuditLogEvents[AuditLogEvents["MemberPrune"] = 21] = "MemberPrune";
    /** Member was banned from server */ AuditLogEvents[AuditLogEvents["MemberBanAdd"] = 22] = "MemberBanAdd";
    /** Server ban was lifted for a member */ AuditLogEvents[AuditLogEvents["MemberBanRemove"] = 23] = "MemberBanRemove";
    /** Member was updated in server */ AuditLogEvents[AuditLogEvents["MemberUpdate"] = 24] = "MemberUpdate";
    /** Member was added or removed from a role */ AuditLogEvents[AuditLogEvents["MemberRoleUpdate"] = 25] = "MemberRoleUpdate";
    /** Member was moved to a different voice channel */ AuditLogEvents[AuditLogEvents["MemberMove"] = 26] = "MemberMove";
    /** Member was disconnected from a voice channel */ AuditLogEvents[AuditLogEvents["MemberDisconnect"] = 27] = "MemberDisconnect";
    /** Bot user was added to server */ AuditLogEvents[AuditLogEvents["BotAdd"] = 28] = "BotAdd";
    /** Role was created */ AuditLogEvents[AuditLogEvents["RoleCreate"] = 30] = "RoleCreate";
    /** Role was edited */ AuditLogEvents[AuditLogEvents["RoleUpdate"] = 31] = "RoleUpdate";
    /** Role was deleted */ AuditLogEvents[AuditLogEvents["RoleDelete"] = 32] = "RoleDelete";
    /** Server invite was created */ AuditLogEvents[AuditLogEvents["InviteCreate"] = 40] = "InviteCreate";
    /** Server invite was updated */ AuditLogEvents[AuditLogEvents["InviteUpdate"] = 41] = "InviteUpdate";
    /** Server invite was deleted */ AuditLogEvents[AuditLogEvents["InviteDelete"] = 42] = "InviteDelete";
    /** Webhook was created */ AuditLogEvents[AuditLogEvents["WebhookCreate"] = 50] = "WebhookCreate";
    /** Webhook properties or channel were updated */ AuditLogEvents[AuditLogEvents["WebhookUpdate"] = 51] = "WebhookUpdate";
    /** Webhook was deleted */ AuditLogEvents[AuditLogEvents["WebhookDelete"] = 52] = "WebhookDelete";
    /** Emoji was created */ AuditLogEvents[AuditLogEvents["EmojiCreate"] = 60] = "EmojiCreate";
    /** Emoji name was updated */ AuditLogEvents[AuditLogEvents["EmojiUpdate"] = 61] = "EmojiUpdate";
    /** Emoji was deleted */ AuditLogEvents[AuditLogEvents["EmojiDelete"] = 62] = "EmojiDelete";
    /** Single message was deleted */ AuditLogEvents[AuditLogEvents["MessageDelete"] = 72] = "MessageDelete";
    /** Multiple messages were deleted */ AuditLogEvents[AuditLogEvents["MessageBulkDelete"] = 73] = "MessageBulkDelete";
    /** Messaged was pinned to a channel */ AuditLogEvents[AuditLogEvents["MessagePin"] = 74] = "MessagePin";
    /** Message was unpinned from a channel */ AuditLogEvents[AuditLogEvents["MessageUnpin"] = 75] = "MessageUnpin";
    /** App was added to server */ AuditLogEvents[AuditLogEvents["IntegrationCreate"] = 80] = "IntegrationCreate";
    /** App was updated (as an example, its scopes were updated) */ AuditLogEvents[AuditLogEvents["IntegrationUpdate"] = 81] = "IntegrationUpdate";
    /** App was removed from server */ AuditLogEvents[AuditLogEvents["IntegrationDelete"] = 82] = "IntegrationDelete";
    /** Stage instance was created (stage channel becomes live) */ AuditLogEvents[AuditLogEvents["StageInstanceCreate"] = 83] = "StageInstanceCreate";
    /** Stage instace details were updated */ AuditLogEvents[AuditLogEvents["StageInstanceUpdate"] = 84] = "StageInstanceUpdate";
    /** Stage instance was deleted (stage channel no longer live) */ AuditLogEvents[AuditLogEvents["StageInstanceDelete"] = 85] = "StageInstanceDelete";
    /** Sticker was created */ AuditLogEvents[AuditLogEvents["StickerCreate"] = 90] = "StickerCreate";
    /** Sticker details were updated */ AuditLogEvents[AuditLogEvents["StickerUpdate"] = 91] = "StickerUpdate";
    /** Sticker was deleted */ AuditLogEvents[AuditLogEvents["StickerDelete"] = 92] = "StickerDelete";
    /** Event was created */ AuditLogEvents[AuditLogEvents["GuildScheduledEventCreate"] = 100] = "GuildScheduledEventCreate";
    /** Event was updated */ AuditLogEvents[AuditLogEvents["GuildScheduledEventUpdate"] = 101] = "GuildScheduledEventUpdate";
    /** Event was cancelled */ AuditLogEvents[AuditLogEvents["GuildScheduledEventDelete"] = 102] = "GuildScheduledEventDelete";
    /** Thread was created in a channel */ AuditLogEvents[AuditLogEvents["ThreadCreate"] = 110] = "ThreadCreate";
    /** Thread was updated */ AuditLogEvents[AuditLogEvents["ThreadUpdate"] = 111] = "ThreadUpdate";
    /** Thread was deleted */ AuditLogEvents[AuditLogEvents["ThreadDelete"] = 112] = "ThreadDelete";
    /** Permissions were updated for a command */ AuditLogEvents[AuditLogEvents["ApplicationCommandPermissionUpdate"] = 121] = "ApplicationCommandPermissionUpdate";
    /** Soundboard sound was created */ AuditLogEvents[AuditLogEvents["SoundboardSoundCreate"] = 130] = "SoundboardSoundCreate";
    /** Soundboard sound was updated */ AuditLogEvents[AuditLogEvents["SoundboardSoundUpdate"] = 131] = "SoundboardSoundUpdate";
    /** Soundboard sound was deleted */ AuditLogEvents[AuditLogEvents["SoundboardSoundDelete"] = 132] = "SoundboardSoundDelete";
    /** Auto moderation rule was created */ AuditLogEvents[AuditLogEvents["AutoModerationRuleCreate"] = 140] = "AutoModerationRuleCreate";
    /** Auto moderation rule was updated */ AuditLogEvents[AuditLogEvents["AutoModerationRuleUpdate"] = 141] = "AutoModerationRuleUpdate";
    /** Auto moderation rule was deleted */ AuditLogEvents[AuditLogEvents["AutoModerationRuleDelete"] = 142] = "AutoModerationRuleDelete";
    /** Message was blocked by AutoMod according to a rule. */ AuditLogEvents[AuditLogEvents["AutoModerationBlockMessage"] = 143] = "AutoModerationBlockMessage";
    /** Message was flagged by AutoMod */ AuditLogEvents[AuditLogEvents["AudoModerationFlagMessage"] = 144] = "AudoModerationFlagMessage";
    /** Member was timed out by AutoMod */ AuditLogEvents[AuditLogEvents["AutoModerationMemberTimedOut"] = 145] = "AutoModerationMemberTimedOut";
    /** Member was quarantined by Auto Moderation */ AuditLogEvents[AuditLogEvents["AutoModerationQuarantineUser"] = 146] = "AutoModerationQuarantineUser";
    /** Creator monetization request was created */ AuditLogEvents[AuditLogEvents["CreatorMonetizationRequestCreated"] = 150] = "CreatorMonetizationRequestCreated";
    /** Creator monetization terms were accepted */ AuditLogEvents[AuditLogEvents["CreatorMonetizationTermsAccepted"] = 151] = "CreatorMonetizationTermsAccepted";
    /** Guild Onboarding Question was created */ AuditLogEvents[AuditLogEvents["OnBoardingPromptCreate"] = 163] = "OnBoardingPromptCreate";
    /** Guild Onboarding Question was updated */ AuditLogEvents[AuditLogEvents["OnBoardingPromptUpdate"] = 164] = "OnBoardingPromptUpdate";
    /** Guild Onboarding Question was deleted */ AuditLogEvents[AuditLogEvents["OnBoardingPromptDelete"] = 165] = "OnBoardingPromptDelete";
    /** Guild Onboarding was created */ AuditLogEvents[AuditLogEvents["OnBoardingCreate"] = 166] = "OnBoardingCreate";
    /** Guild Onboarding was updated */ AuditLogEvents[AuditLogEvents["OnBoardingUpdate"] = 167] = "OnBoardingUpdate";
    /** Guild Server Guide was created */ AuditLogEvents[AuditLogEvents["HomeSettingsCreate"] = 190] = "HomeSettingsCreate";
    /** Guild Server Guide was updated */ AuditLogEvents[AuditLogEvents["HomeSettingsUpdate"] = 191] = "HomeSettingsUpdate";
    return AuditLogEvents;
}({});

//# sourceMappingURL=data:application/json;base64,