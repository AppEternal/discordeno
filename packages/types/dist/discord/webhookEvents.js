/** Types for: https://discord.com/developers/docs/events/webhook-events */ /** https://discord.com/developers/docs/events/webhook-events#webhook-types */ export var DiscordEventWebhookType = /*#__PURE__*/ function(DiscordEventWebhookType) {
    /** PING event sent to verify your Webhook Event URL is active */ DiscordEventWebhookType[DiscordEventWebhookType["Ping"] = 0] = "Ping";
    /** Webhook event (details for event in event body object) */ DiscordEventWebhookType[DiscordEventWebhookType["Event"] = 1] = "Event";
    return DiscordEventWebhookType;
}({});
/** https://discord.com/developers/docs/events/webhook-events#event-types */ export var DiscordWebhookEventType = /*#__PURE__*/ function(DiscordWebhookEventType) {
    /** Sent when an app was authorized by a user to a server or their account */ DiscordWebhookEventType["ApplicationAuthorized"] = "APPLICATION_AUTHORIZED";
    /** Sent when an app was deauthorized by a user */ DiscordWebhookEventType["ApplicationDeauthorized"] = "APPLICATION_DEAUTHORIZED";
    /** Entitlement was created */ DiscordWebhookEventType["EntitlementCreate"] = "ENTITLEMENT_CREATE";
    /** User was added to a Quest (currently unavailable) */ DiscordWebhookEventType["QuestUserEnrollment"] = "QUEST_USER_ENROLLMENT";
    /** Sent when a message is created in a lobby */ DiscordWebhookEventType["LobbyMessageCreate"] = "LOBBY_MESSAGE_CREATE";
    /** Sent when a message is updated in a lobby */ DiscordWebhookEventType["LobbyMessageUpdate"] = "LOBBY_MESSAGE_UPDATE";
    /** Sent when a message is deleted from a lobby */ DiscordWebhookEventType["LobbyMessageDelete"] = "LOBBY_MESSAGE_DELETE";
    /** Sent when a direct message is created during an active Social SDK session */ DiscordWebhookEventType["GameDirectMessageCreate"] = "GAME_DIRECT_MESSAGE_CREATE";
    /** Sent when a direct message is updated during an active Social SDK session */ DiscordWebhookEventType["GameDirectMessageUpdate"] = "GAME_DIRECT_MESSAGE_UPDATE";
    /** Sent when a direct message is deleted during an active Social SDK session */ DiscordWebhookEventType["GameDirectMessageDelete"] = "GAME_DIRECT_MESSAGE_DELETE";
    return DiscordWebhookEventType;
}({});

//# sourceMappingURL=data:application/json;base64,