/** Types for: https://discord.com/developers/docs/resources/user */ /** https://discord.com/developers/docs/resources/user#user-object-user-flags */ export var UserFlags = /*#__PURE__*/ function(UserFlags) {
    UserFlags[UserFlags["DiscordEmployee"] = 1] = "DiscordEmployee";
    UserFlags[UserFlags["PartneredServerOwner"] = 2] = "PartneredServerOwner";
    UserFlags[UserFlags["HypeSquadEventsMember"] = 4] = "HypeSquadEventsMember";
    UserFlags[UserFlags["BugHunterLevel1"] = 8] = "BugHunterLevel1";
    UserFlags[UserFlags["HouseBravery"] = 64] = "HouseBravery";
    UserFlags[UserFlags["HouseBrilliance"] = 128] = "HouseBrilliance";
    UserFlags[UserFlags["HouseBalance"] = 256] = "HouseBalance";
    UserFlags[UserFlags["EarlySupporter"] = 512] = "EarlySupporter";
    UserFlags[UserFlags["TeamUser"] = 1024] = "TeamUser";
    UserFlags[UserFlags["BugHunterLevel2"] = 16384] = "BugHunterLevel2";
    UserFlags[UserFlags["VerifiedBot"] = 65536] = "VerifiedBot";
    UserFlags[UserFlags["EarlyVerifiedBotDeveloper"] = 131072] = "EarlyVerifiedBotDeveloper";
    UserFlags[UserFlags["DiscordCertifiedModerator"] = 262144] = "DiscordCertifiedModerator";
    UserFlags[UserFlags["BotHttpInteractions"] = 524288] = "BotHttpInteractions";
    UserFlags[UserFlags["ActiveDeveloper"] = 4194304] = "ActiveDeveloper";
    return UserFlags;
}({});
/** https://discord.com/developers/docs/resources/user#user-object-premium-types */ export var PremiumTypes = /*#__PURE__*/ function(PremiumTypes) {
    PremiumTypes[PremiumTypes["None"] = 0] = "None";
    PremiumTypes[PremiumTypes["NitroClassic"] = 1] = "NitroClassic";
    PremiumTypes[PremiumTypes["Nitro"] = 2] = "Nitro";
    PremiumTypes[PremiumTypes["NitroBasic"] = 3] = "NitroBasic";
    return PremiumTypes;
}({});
/** https://discord.com/developers/docs/resources/user#connection-object-services */ export var DiscordConnectionServiceType = /*#__PURE__*/ function(DiscordConnectionServiceType) {
    DiscordConnectionServiceType["AmazonMusic"] = "amazon-music";
    DiscordConnectionServiceType["BattleNet"] = "battlenet";
    DiscordConnectionServiceType["Bungie"] = "bungie";
    DiscordConnectionServiceType["Bluesky"] = "bluesky";
    DiscordConnectionServiceType["Crunchyroll"] = "crunchyroll";
    DiscordConnectionServiceType["Domain"] = "domain";
    DiscordConnectionServiceType["eBay"] = "ebay";
    DiscordConnectionServiceType["EpicGames"] = "epicgames";
    DiscordConnectionServiceType["Facebook"] = "facebook";
    DiscordConnectionServiceType["GitHub"] = "github";
    DiscordConnectionServiceType["Instagram"] = "instagram";
    DiscordConnectionServiceType["LeagueOfLegends"] = "leagueoflegends";
    DiscordConnectionServiceType["Mastodon"] = "mastodon";
    DiscordConnectionServiceType["PayPal"] = "paypal";
    DiscordConnectionServiceType["PlayStationNetwork"] = "playstation";
    DiscordConnectionServiceType["Reddit"] = "reddit";
    DiscordConnectionServiceType["RiotGames"] = "riotgames";
    DiscordConnectionServiceType["Roblox"] = "roblox";
    DiscordConnectionServiceType["Spotify"] = "spotify";
    DiscordConnectionServiceType["Skype"] = "skype";
    DiscordConnectionServiceType["Steam"] = "steam";
    DiscordConnectionServiceType["TikTok"] = "tiktok";
    DiscordConnectionServiceType["Twitch"] = "twitch";
    DiscordConnectionServiceType["Twitter"] = "twitter";
    DiscordConnectionServiceType["Xbox"] = "xbox";
    DiscordConnectionServiceType["YouTube"] = "youtube";
    return DiscordConnectionServiceType;
}({});
/** https://discord.com/developers/docs/resources/user#connection-object-visibility-types */ export var DiscordConnectionVisibility = /*#__PURE__*/ function(DiscordConnectionVisibility) {
    /** invisible to everyone except the user themselves */ DiscordConnectionVisibility[DiscordConnectionVisibility["None"] = 0] = "None";
    /** visible to everyone */ DiscordConnectionVisibility[DiscordConnectionVisibility["Everyone"] = 1] = "Everyone";
    return DiscordConnectionVisibility;
}({});

//# sourceMappingURL=data:application/json;base64,