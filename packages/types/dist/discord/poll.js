/** Types for: https://discord.com/developers/docs/resources/poll */ /** https://discord.com/developers/docs/resources/poll#layout-type */ export var DiscordPollLayoutType = /*#__PURE__*/ function(DiscordPollLayoutType) {
    /** The default layout */ DiscordPollLayoutType[DiscordPollLayoutType["Default"] = 1] = "Default";
    return DiscordPollLayoutType;
}({});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaXNjb3JkL3BvbGwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFR5cGVzIGZvcjogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3BvbGwgKi9cblxuaW1wb3J0IHR5cGUgeyBEaXNjb3JkRW1vamkgfSBmcm9tICcuL2Vtb2ppLmpzJ1xuaW1wb3J0IHR5cGUgeyBEaXNjb3JkVXNlciB9IGZyb20gJy4vdXNlci5qcydcblxuLyoqIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy9wb2xsI3BvbGwtb2JqZWN0LXBvbGwtb2JqZWN0LXN0cnVjdHVyZSAqL1xuZXhwb3J0IGludGVyZmFjZSBEaXNjb3JkUG9sbCB7XG4gIC8qKiBUaGUgcXVlc3Rpb24gb2YgdGhlIHBvbGwuIE9ubHkgYHRleHRgIGlzIHN1cHBvcnRlZC4gKi9cbiAgcXVlc3Rpb246IERpc2NvcmRQb2xsTWVkaWFcbiAgLyoqIEVhY2ggb2YgdGhlIGFuc3dlcnMgYXZhaWxhYmxlIGluIHRoZSBwb2xsLiBUaGVyZSBpcyBhIG1heGltdW0gb2YgMTAgYW5zd2VycyBwZXIgcG9sbC4gKi9cbiAgYW5zd2VyczogRGlzY29yZFBvbGxBbnN3ZXJbXVxuICAvKipcbiAgICogVGhlIHRpbWUgd2hlbiB0aGUgcG9sbCBlbmRzLlxuICAgKlxuICAgKiBAcmVtYXJrc1xuICAgKiBgZXhwaXJ5YCBpcyBtYXJrZWQgYXMgbnVsbGFibGUgdG8gc3VwcG9ydCBub24tZXhwaXJpbmcgcG9sbHMgaW4gdGhlIGZ1dHVyZSwgYnV0IGFsbCBwb2xscyBoYXZlIGFuIGV4cGlyeSBjdXJyZW50bHkuXG4gICAqL1xuICBleHBpcnk6IHN0cmluZyB8IG51bGxcbiAgLyoqIFdoZXRoZXIgYSB1c2VyIGNhbiBzZWxlY3QgbXVsdGlwbGUgYW5zd2VycyAqL1xuICBhbGxvd19tdWx0aXNlbGVjdDogYm9vbGVhblxuICAvKiogVGhlIGxheW91dCB0eXBlIG9mIHRoZSBwb2xsICovXG4gIGxheW91dF90eXBlOiBEaXNjb3JkUG9sbExheW91dFR5cGVcbiAgLyoqXG4gICAqIFRoZSByZXN1bHRzIG9mIHRoZSBwb2xsXG4gICAqXG4gICAqIEByZW1hcmtzXG4gICAqIFRoaXMgdmFsdWUgd2lsbCBub3QgYmUgc2VudCBieSBkaXNjb3JkIHVuZGVyIHNwZWNpZmljIGNvbmRpdGlvbnMgd2hlcmUgdGhleSBkb24ndCBmZXRjaCB0aGVtIG9uIHRoZWlyIGJhY2tlbmQuIFdoZW4gdGhpcyB2YWx1ZSBpcyBtaXNzaW5nIGl0IHNob3VsZCBiZSBpbnRlcnByZXRlZCBhcyBcIlVua25vd24gcmVzdWx0c1wiIGFuZCBub3QgYXMgXCJObyByZXN1bHRzXCJcbiAgICogVGhlIHJlc3VsdHMgbWF5IG5vdCBiZSB0b3RhbGx5IGFjY3VyYXRlIHdoaWxlIHRoZSBwb2xsIGhhcyBub3QgZW5kZWQuIFdoZW4gaXQgZW5kcyBkaXNjb3JkIHdpbGwgcmUtY2FsY3VsYXRlIGFsbCB0aGUgcmVzdWx0cyBhbmQgc2V0IHtAbGluayBEaXNjb3JkUG9sbFJlc3VsdC5pc19maW5hbGl6ZWR9IHRvIHRydWVcbiAgICovXG4gIHJlc3VsdHM/OiBEaXNjb3JkUG9sbFJlc3VsdFxufVxuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3BvbGwjbGF5b3V0LXR5cGUgKi9cbmV4cG9ydCBlbnVtIERpc2NvcmRQb2xsTGF5b3V0VHlwZSB7XG4gIC8qKiBUaGUgZGVmYXVsdCBsYXlvdXQgKi9cbiAgRGVmYXVsdCA9IDEsXG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvcG9sbCNwb2xsLW1lZGlhLW9iamVjdC1wb2xsLW1lZGlhLW9iamVjdC1zdHJ1Y3R1cmUgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGlzY29yZFBvbGxNZWRpYSB7XG4gIC8qKlxuICAgKiBUaGUgdGV4dCBvZiB0aGUgZmllbGRcbiAgICpcbiAgICogQHJlbWFya3NcbiAgICogYHRleHRgIHNob3VsZCBhbHdheXMgYmUgbm9uLW51bGwgZm9yIGJvdGggcXVlc3Rpb25zIGFuZCBhbnN3ZXJzLCBidXQgdGhpcyBpcyBzdWJqZWN0IHRvIGNoYW5nZXMuXG4gICAqIFRoZSBtYXhpbXVtIGxlbmd0aCBvZiBgdGV4dGAgaXMgMzAwIGZvciB0aGUgcXVlc3Rpb24sIGFuZCA1NSBmb3IgYW55IGFuc3dlci5cbiAgICovXG4gIHRleHQ/OiBzdHJpbmdcbiAgLyoqXG4gICAqIFRoZSBlbW9qaSBvZiB0aGUgZmllbGRcbiAgICpcbiAgICogQHJlbWFya3NcbiAgICogV2hlbiBjcmVhdGluZyBhIHBvbGwgYW5zd2VyIHdpdGggYW4gZW1vamksIG9uZSBvbmx5IG5lZWRzIHRvIHNlbmQgZWl0aGVyIHRoZSBgaWRgIChjdXN0b20gZW1vamkpIG9yIGBuYW1lYCAoZGVmYXVsdCBlbW9qaSkgYXMgdGhlIG9ubHkgZmllbGQuXG4gICAqL1xuICBlbW9qaT86IFBhcnRpYWw8RGlzY29yZEVtb2ppPlxufVxuXG4vKiogaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzL2RvY3MvcmVzb3VyY2VzL3BvbGwjcG9sbC1hbnN3ZXItb2JqZWN0LXBvbGwtYW5zd2VyLW9iamVjdC1zdHJ1Y3R1cmUgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGlzY29yZFBvbGxBbnN3ZXIge1xuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBhbnN3ZXJcbiAgICpcbiAgICogQHJlbWFya3NcbiAgICogVGhpcyBpZCBsYWJlbHMgZWFjaCBhbnN3ZXIuIEl0IHN0YXJ0cyBhdCAxIGFuZCBnb2VzIHVwIHNlcXVlbnRpYWxseS4gRGlzY29yZCByZWNvbW1lbmQgYWdhaW5zdCBkZXBlbmRpbmcgb24gdGhpcyB2YWx1ZSBhcyBpcyBhIGltcGxlbWVudGF0aW9uIGRldGFpbC5cbiAgICovXG4gIGFuc3dlcl9pZDogbnVtYmVyXG4gIC8qKiBUaGUgZGF0YSBvZiB0aGUgYW5zd2VyICovXG4gIHBvbGxfbWVkaWE6IERpc2NvcmRQb2xsTWVkaWFcbn1cblxuLyoqIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy9wb2xsI3BvbGwtcmVzdWx0cy1vYmplY3QtcG9sbC1yZXN1bHRzLW9iamVjdC1zdHJ1Y3R1cmUgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGlzY29yZFBvbGxSZXN1bHQge1xuICAvKiogV2hldGhlciB0aGUgdm90ZXMgaGF2ZSBiZWVuIHByZWNpc2VseSBjb3VudGVkICovXG4gIGlzX2ZpbmFsaXplZDogYm9vbGVhblxuICAvKiogVGhlIGNvdW50cyBmb3IgZWFjaCBhbnN3ZXIgKi9cbiAgYW5zd2VyX2NvdW50czogRGlzY29yZFBvbGxBbnN3ZXJDb3VudFtdXG59XG5cbi8qKiBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMvZG9jcy9yZXNvdXJjZXMvcG9sbCNwb2xsLXJlc3VsdHMtb2JqZWN0LXBvbGwtcmVzdWx0cy1vYmplY3Qtc3RydWN0dXJlICovXG5leHBvcnQgaW50ZXJmYWNlIERpc2NvcmRQb2xsQW5zd2VyQ291bnQge1xuICAvKiogVGhlIHtAbGluayBEaXNjb3JkUG9sbEFuc3dlci5hbnN3ZXJfaWQgfCBhbnN3ZXJfaWR9ICovXG4gIGlkOiBudW1iZXJcbiAgLyoqIFRoZSBudW1iZXIgb2Ygdm90ZXMgZm9yIHRoaXMgYW5zd2VyICovXG4gIGNvdW50OiBudW1iZXJcbiAgLyoqIFdoZXRoZXIgdGhlIGN1cnJlbnQgdXNlciB2b3RlZCBmb3IgdGhpcyBhbnN3ZXIgKi9cbiAgbWVfdm90ZWQ6IGJvb2xlYW5cbn1cblxuLyoqIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycy9kb2NzL3Jlc291cmNlcy9wb2xsI2dldC1hbnN3ZXItdm90ZXJzLXJlc3BvbnNlLWJvZHkgKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGlzY29yZEdldEFuc3dlclZvdGVzUmVzcG9uc2Uge1xuICAvKiogVXNlcnMgd2hvIHZvdGVkIGZvciB0aGlzIGFuc3dlciAqL1xuICB1c2VyczogRGlzY29yZFVzZXJbXVxufVxuIl0sIm5hbWVzIjpbIkRpc2NvcmRQb2xsTGF5b3V0VHlwZSJdLCJtYXBwaW5ncyI6IkFBQUEsa0VBQWtFLEdBZ0NsRSxtRUFBbUUsR0FDbkUsT0FBTyxJQUFBLEFBQUtBLCtDQUFBQTtJQUNWLHVCQUF1QjtXQURiQTtNQUdYIn0=